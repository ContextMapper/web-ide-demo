ContextMap DDDSampleMap {
	state = TO_BE
    contains OrdenesEntregaContext
    contains NotificacionesContext
    contains ProveedoresContext
    contains LogisticaContext
    contains OrdenesDespachoContext
    contains ProductoContext
    contains RutasContext
    contains SeguimientoContext
    contains OrdenesTransporteContext
    contains EntregaContext
   

    
    NotificacionesContext [U]->[D] OrdenesEntregaContext
    ProveedoresContext[U]->[D] OrdenesEntregaContext
    
    OrdenesEntregaContext [SK]<->[SK] OrdenesDespachoContext
 
    LogisticaContext [D,ACL]<-[U] OrdenesDespachoContext
    OrdenesDespachoContext [D,ACL]<-[U,OHS,PL] ProductoContext

    OrdenesDespachoContext [SK]<->[SK] OrdenesTransporteContext

    RutasContext[D,ACL]<-[U] OrdenesTransporteContext
	RutasContext[U,OHS,PL]->[D] EntregaContext
    RutasContext [U,PL]->[D,ACL]  SeguimientoContext
}


BoundedContext OrdenesEntregaContext {
	domainVisionStatement ="Donde se verifica la disponiblidad de los productos"
    Module ordenesEntrega {
        basePackage = se.citerus.dddsample.domain.model

        Aggregate OrdenesEntrega {
            Entity OrdenesEntrega
            ValueObject UnLocode
            ValueObject OrdenesEntregaShared
        }
    }
}

BoundedContext NotificacionesContext {
	domainVisionStatement ="Donde se actualizan y notifican a los distintas entidades en caso de retrasos o incidencias en el camino."
    Module notificaciones {
        basePackage = se.citerus.dddsample.domain.model

        Aggregate Notificaciones {
            Entity Notificaciones
            ValueObject UnLocode
            ValueObject NotificacionesShared
        }
    }
}

BoundedContext ProveedoresContext {
	domainVisionStatement ="Cuando no se tienen disponibilidad de los productos en las bodegas abastecen los puntos de distribución"
    Module proveedores {
        basePackage = se.citerus.dddsample.domain.model

        Aggregate Proveedores {
            Entity Proveedores
            ValueObject UnLocode
            ValueObject ProveedoresShared
        }
    }
}

BoundedContext LogisticaContext {
	domainVisionStatement ="Donde se coordina la logística de distribución, se lleva a cabo el despacho y empaquetado de los productos"
    Module logistica {
        basePackage = se.citerus.dddsample.domain.model

        Aggregate Logistica {
            Entity Logistica
            ValueObject UnLocode
            ValueObject LogisticaShared
        }
    }
}

BoundedContext OrdenesDespachoContext {
	domainVisionStatement ="Donde se lleva a cabo el checkout de los paquetes, la verificación de la disponibilidad de los transportes propios."
    Module OrdenesDespacho {
        basePackage = se.citerus.dddsample.domain.model

        Aggregate OrdenesDespacho {
            Entity OrdenesDespacho
            ValueObject UnLocode
            ValueObject OrdenesDespachoShared
        }
    }
}

BoundedContext ProductoContext {
	domainVisionStatement ="Item que esta asociado a una orden para ser entregada a un cliente"
    Module Producto {
        basePackage = se.citerus.dddsample.domain.model

        Aggregate Producto {
            Entity Producto
            ValueObject UnLocode
            ValueObject ProductoShared
        }
    }
}

BoundedContext RutasContext {
	domainVisionStatement ="Rutas creadas para distribucion de los productos , donde se crea la ruta optima para realizar la entrega de estos"
    Module Rutas {
        basePackage = se.citerus.dddsample.domain.model

        Aggregate Rutas {
            Entity Rutas
            ValueObject UnLocode
            ValueObject RutasShared
        }
    }
}

BoundedContext SeguimientoContext {
	domainVisionStatement ="Ubicación en tiempo real de cada transporte por GPS"
    Module Seguimiento {
        basePackage = se.citerus.dddsample.domain.model

        Aggregate Seguimiento {
            Entity Seguimiento
            ValueObject UnLocode
            ValueObject SeguimientoShared
        }
    }
}

BoundedContext OrdenesTransporteContext {
	domainVisionStatement ="Estas son creadas para realizar el seguimiento en un transporte dado de un producto en ditribución"
    Module OrdenesTransporte {
        basePackage = se.citerus.dddsample.domain.model

        Aggregate OrdenesTransporte {
            Entity OrdenesTransporte
            ValueObject UnLocode
            ValueObject OrdenesTransporteShared
        }
    }
}

BoundedContext EntregaContext {
	domainVisionStatement ="Donde se realiza la entrega de los productos a los clientes con dos modalidades y se rastrea en tiempo real mediante GPS."
    Module Entrega {
        basePackage = se.citerus.dddsample.domain.model

        Aggregate Entrega {
            Entity Entrega
            ValueObject UnLocode
            ValueObject EntregaShared
        }
    }
}